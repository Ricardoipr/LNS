package com.LNS.Tests;

import java.util.List;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.web.client.RestTemplate;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertTrue;

import com.LNS.Templates;
import com.LNS.Models.ModelsETApi.Provinces;
import com.LNS.Models.ModelsETApi.ProvincesData;
import com.LNS.Models.ModelsOurApi.Community;
import com.LNS.Models.ModelsOurApi.Municipality;
import com.LNS.Service.ProvinceService;

@SpringBootTest
public class Tests {

	@Autowired
	RestTemplate restTemplate;

	@Autowired
	ProvinceService provinceService;

	@Test
	@DisplayName("Teste para verificar se os dados das provincias e comunidades foram corretamente extraidos da API para a aplicação")
	public void ProvincesAndCommunitiesToDataTest() {
		ProvincesData provincesAndCommunitiesTest1 = new ProvincesData("01", "Araba/Álava",
				"16", "País Vasco/Euskadi");
		ProvincesData provincesAndCommunitiesTest2 = new ProvincesData("08", "Barcelona",
				"09", "Cataluña/Catalunya");
		ProvincesData provincesAndCommunitiesTest3 = new ProvincesData("07", "Illes Balears",
				"04", "Illes Balears");
		ProvincesData provincesAndCommunitiesTest4 = new ProvincesData(" ", " ",
				" ", " ");

		Provinces provinces = Templates.restTemplateProvince(restTemplate);

		List<ProvincesData> testingList = provinces.getProvinces();

		assertNotNull(testingList);
		assertTrue(testingList.contains(provincesAndCommunitiesTest1));
		assertTrue(testingList.contains(provincesAndCommunitiesTest2));
		assertTrue(testingList.contains(provincesAndCommunitiesTest3));
		assertFalse(testingList.contains(provincesAndCommunitiesTest4));
	}

	@Test
	@DisplayName("Teste para verificar se os dados dos municipios foram corretamente extraidos da API para a aplicação")
	public void MunicipalitiesToDataTest() {

		Municipality MunicipalityTest1 = new Municipality("08001000000",
				"Abrera");
		Municipality MunicipalityTest2 = new Municipality("08004000000",
				"Alpens");
		Municipality MunicipalityTest3 = new Municipality("08072000000",
				"Corbera de Llobregat");
		Municipality MunicipalityTest4 = new Municipality("08235000000",
				"Sant Pol de Mar");
		Municipality MunicipalityTest5 = new Municipality("123456789",
				"Wrong Name");
		Municipality MunicipalityTest6 = new Municipality(" ", " ");

		List<Municipality> testingList = Templates.restTemplateMunicipality(restTemplate, "08");

		assertNotNull(testingList);
		assertTrue(testingList.contains(MunicipalityTest1));
		assertTrue(testingList.contains(MunicipalityTest2));
		assertTrue(testingList.contains(MunicipalityTest3));
		assertTrue(testingList.contains(MunicipalityTest4));
		assertFalse(testingList.contains(MunicipalityTest5));
		assertFalse(testingList.contains(MunicipalityTest6));
	}

	@Test
	@DisplayName ("Teste para verificar filtros das comunidades")
	public void TestFilter(){
		Community filterTest1 = new Community("01", "Andalucía");
		Community filterTest2 = new Community("02", "Aragón");
		Community filterTest3 = new Community("123455324123", "Wrong name");

		List<Community> communityTesting = provinceService.printcommunities();

		assertNotNull(communityTesting);
		assertTrue(communityTesting.contains(filterTest1));
		assertTrue(communityTesting.contains(filterTest2));
		assertFalse(communityTesting.contains(filterTest3));

	}

}
